// <auto-generated />
using System;
using FoxyMonitor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoxyMonitor.Migrations
{
    [DbContext(typeof(FMDbContext))]
    partial class FMDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("FoxyMonitor.Data.Models.Account", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("AuthToken")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("authToken");

                    b.Property<decimal>("Collateral")
                        .HasColumnType("TEXT")
                        .HasColumnName("collateral");

                    b.Property<uint>("Difficulty")
                        .HasColumnType("INTEGER")
                        .HasColumnName("difficulty");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("displayName");

                    b.Property<string>("DistributionRatio")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("distRatio");

                    b.Property<decimal>("EstCapacity")
                        .HasColumnType("TEXT")
                        .HasColumnName("estCapacity");

                    b.Property<DateTimeOffset>("LastAcceptedPartialTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("lastAcceptedPartialTime");

                    b.Property<ulong>("LastBlockWon")
                        .HasColumnType("INTEGER")
                        .HasColumnName("lastBlockWon");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("TEXT")
                        .HasColumnName("lastUpdated");

                    b.Property<string>("LauncherId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("launcherId");

                    b.Property<string>("PayoutAddress")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("payoutAddress");

                    b.Property<decimal>("PendingBalance")
                        .HasColumnType("TEXT")
                        .HasColumnName("pendingBalance");

                    b.Property<string>("PoolName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("poolName");

                    b.Property<string>("PoolPubKey")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("poolPubKey");

                    b.Property<int>("PoolType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("poolType");

                    b.Property<uint>("Shares")
                        .HasColumnType("INTEGER")
                        .HasColumnName("shares");

                    b.HasKey("Id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("FoxyMonitor.Data.Models.Alert", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("AccountId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("accountId");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("TEXT")
                        .HasColumnName("created");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER")
                        .HasColumnName("level");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("message");

                    b.Property<bool>("PendingDeletion")
                        .HasColumnType("INTEGER")
                        .HasColumnName("pendingDeletion");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("title");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("url");

                    b.Property<bool>("Viewed")
                        .HasColumnType("INTEGER")
                        .HasColumnName("viewed");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("PendingDeletion");

                    b.HasIndex("Viewed");

                    b.ToTable("alerts");
                });

            modelBuilder.Entity("FoxyMonitor.Data.Models.PostAccountHistoricalDbItem", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<uint>("AccountId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("accountId");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("createdAt");

                    b.Property<uint>("Difficulty")
                        .HasColumnType("INTEGER")
                        .HasColumnName("difficulty");

                    b.Property<decimal>("EstCapacity")
                        .HasColumnType("TEXT")
                        .HasColumnName("estCapacity");

                    b.Property<uint>("ShareCount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("shareCount");

                    b.Property<uint>("Shares")
                        .HasColumnType("INTEGER")
                        .HasColumnName("shares");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("postAccountHistoricalItems");
                });

            modelBuilder.Entity("FoxyMonitor.Data.Models.PostPoolInfo", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<decimal>("AverageEffort")
                        .HasColumnType("TEXT")
                        .HasColumnName("avgEffort");

                    b.Property<string>("Balance")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("balance");

                    b.Property<string>("BlockExplorerAddressUrlTemplate")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("blockExplorerAddressUrlTemplate");

                    b.Property<string>("BlockExplorerBlockUrlTemplate")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("blockExplorerBlockUrlTemplate");

                    b.Property<string>("BlockExplorerCoinUrlTemplate")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("blockExplorerCoinUrlTemplate");

                    b.Property<uint>("BlockRewardDistributionDelay")
                        .HasColumnType("INTEGER")
                        .HasColumnName("blockRewardDistributionDelay");

                    b.Property<uint>("BlocksPerDay")
                        .HasColumnType("INTEGER")
                        .HasColumnName("blocksPerDay");

                    b.Property<string>("Coin")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("coin");

                    b.Property<decimal>("DailyRewardPerPiB")
                        .HasColumnType("TEXT")
                        .HasColumnName("dailyRewardPerPiB");

                    b.Property<string>("DefaultDistributionRatio")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("defaultDistributionRatio");

                    b.Property<uint>("Difficulty")
                        .HasColumnType("INTEGER")
                        .HasColumnName("difficulty");

                    b.Property<string>("FarmingUrl")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("farmingUrl");

                    b.Property<ulong>("Height")
                        .HasColumnType("INTEGER")
                        .HasColumnName("height");

                    b.Property<uint>("HistoricalTimeInMinutes")
                        .HasColumnType("INTEGER")
                        .HasColumnName("historicalTimeInMinutes");

                    b.Property<bool>("IsTestnet")
                        .HasColumnType("INTEGER")
                        .HasColumnName("isTestnet");

                    b.Property<DateTimeOffset>("LastPayoutTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("lastPayoutTime");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("TEXT")
                        .HasColumnName("lastUpdated");

                    b.Property<decimal>("MinimumPayout")
                        .HasColumnType("TEXT")
                        .HasColumnName("minimumPayout");

                    b.Property<string>("NetworkSpaceInTiB")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("networkSpaceInTiB");

                    b.Property<decimal>("OnDemandPayoutFee")
                        .HasColumnType("TEXT")
                        .HasColumnName("onDemandPayoutFee");

                    b.Property<string>("PoolAddress")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("poolAddress");

                    b.Property<int>("PoolApiName")
                        .HasColumnType("INTEGER")
                        .HasColumnName("poolApiName");

                    b.Property<decimal>("PoolFee")
                        .HasColumnType("TEXT")
                        .HasColumnName("poolFee");

                    b.Property<string>("PoolName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("poolName");

                    b.Property<string>("PoolUrl")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("poolUrl");

                    b.Property<DateTimeOffset>("ReceivedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("receivedAt");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ticker");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("version");

                    b.HasKey("Id");

                    b.ToTable("postPools");
                });

            modelBuilder.Entity("FoxyMonitor.Data.Models.PostAccountHistoricalDbItem", b =>
                {
                    b.HasOne("FoxyMonitor.Data.Models.Account", null)
                        .WithMany("PostAccountHistoricalDbItems")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoxyMonitor.Data.Models.Account", b =>
                {
                    b.Navigation("PostAccountHistoricalDbItems");
                });
#pragma warning restore 612, 618
        }
    }
}
